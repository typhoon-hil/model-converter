Boost {

    Components:
        M=MOSFET;
        D=DIODE;
    ;

    Connections:
        M:0-D:0.
    ;

}

Buck {

    Components:
        M=MOSFET;
        D=DIODE;
    ;

    Connections:
        M:1-D:1.
    ;

}

AFWRm {

    Components:
        M1=MOSFET;
        M2=MOSFET;
    ;

    Connections:
        M1:1-M2:1.
    ;

}

IGBT_Leg {

    Components:
        I1=IGBT;
        I2=IGBT;
    ;

    Connections:
        I1:1-I2:0.

    ;

}


*Boost => core/Boost:

    ctrl_src= "Internal modulator";

    Terminals:
        a_in[pe] = M.0;
        b_in[pe] = M.1;
        a_out[pe] = D.1;
        b_out[pe] = M.1;
    ;
;

*Buck => core/Buck:

    ctrl_src= "Internal modulator";

    Terminals:
        a_in[pe] = M.0;
        b_in[pe] = D.0;
        a_out[pe] = M.1;
        b_out[pe] = D.0;
    ;
;

*IGBT_Leg => core/IGBT Leg:

    Terminals:
        pos_out[pe] = I1.0;
        a_in[pe] = I1.1;
        neg_out[pe] = I2.1;
    ;
;

*AFWRm => core/Active Full Wave Rectifier:

    ctrl_src= "Digital inputs";
    S1= "3";
    S2= "9";

    Terminals:
        a_in[pe] = M1.0;
        b_in[pe] = M2.0;
        out[pe] = M1.1;
    ;
;

SM_1PH_INV => core/Single Phase Inverter:

	Sa_bot= int2string(int_value = Sa_bot);
	Sa_top= int2string(int_value = Sa_top);
	Sb_top= int2string(int_value = Sb_top);
	Sb_bot= int2string(int_value = Sb_bot);

	Terminals:
		a_in[pe] = 2;
		b_in[pe] = 3;
		pos_out[pe] = 0;
		neg_out[pe] = 1;
	;
;

SM_3PH_INV => core/Three Phase Inverter:

	Sa_top= int2string(int_value = Sa_top);
	Sa_bot= int2string(int_value = Sa_bot);
	Sb_top= int2string(int_value = Sb_top);
	Sb_bot= int2string(int_value = Sb_bot);
	Sc_top= int2string(int_value = Sc_top);
	Sc_bot= int2string(int_value = Sc_bot);

	Terminals:
		a_in[pe] = 2;
		b_in[pe] = 3;
		c_in[pe] = 4;
		pos_out[pe] = 0;
		neg_out[pe] = 1;
	;
;

SM_3PH_3L_T_INV => core/Three Phase T Type Inverter:

	Sa_1= int2string(int_value = Sa_1);
	Sa_2= int2string(int_value = Sa_2);
	Sa_3= int2string(int_value = Sa_3);
	Sa_4= int2string(int_value = Sa_4);
	Sb_1= int2string(int_value = Sb_1);
	Sb_2= int2string(int_value = Sb_2);
	Sb_3= int2string(int_value = Sb_3);
	Sb_4= int2string(int_value = Sb_4);
	Sc_1= int2string(int_value = Sc_1);
	Sc_2= int2string(int_value = Sc_2);
	Sc_3= int2string(int_value = Sc_3);
	Sc_4= int2string(int_value = Sc_4);

	Terminals:
		A[pe] = 3;
		B[pe] = 16;
		C[pe] = 17;
		DC+[pe] = 0;
		DC-[pe] = 1;
		DCn[pe] = 2;
	;
;

SM_3PH_3L_NPC_INV => core/Three Phase NPC Inverter:

	Sa_1= int2string(int_value = Sa_1);
	Sa_2= int2string(int_value = Sa_2);
	Sa_3= int2string(int_value = Sa_3);
	Sa_4= int2string(int_value = Sa_4);
	Sb_1= int2string(int_value = Sb_1);
	Sb_2= int2string(int_value = Sb_2);
	Sb_3= int2string(int_value = Sb_3);
	Sb_4= int2string(int_value = Sb_4);
	Sc_1= int2string(int_value = Sc_1);
	Sc_2= int2string(int_value = Sc_2);
	Sc_3= int2string(int_value = Sc_3);
	Sc_4= int2string(int_value = Sc_4);

	Terminals:
		A[pe] = 3;
		B[pe] = 8;
		C[pe] = 9;
		DC+[pe] = 0;
		DC-[pe] = 1;
		DCn[pe] = 2;
	;
;

SM_3L_NPC_LEG => core/NPC Leg:

	S1= int2string(int_value = S1);
	S2= int2string(int_value = S2);
	S3= int2string(int_value = S3);
	S4= int2string(int_value = S4);

	Terminals:
		OUT[pe] = 3;
		DC+[pe] = 0;
		DC-[pe] = 1;
		DCn[pe] = 2;
	;
;

SM_3L_T_LEG => core/NPC T Type Leg:

	S1= int2string(int_value = S1);
	S2= int2string(int_value = S2);
	S3= int2string(int_value = S3);
	S4= int2string(int_value = S4);

	Terminals:
		A[pe] = 3;
		DC+[pe] = 0;
		DC-[pe] = 1;
		DCn[pe] = 2;
	;
;

SM_2L_LEG => core/IGBT Leg:

	S_top= int2string(int_value = S_top);
	S_bot= int2string(int_value = S_bot);

	Terminals:
		a_in[pe] = 2;
		pos_out[pe] = 0;
		neg_out[pe] = 1;
	;
;

R => core/Resistor:

	resistance=Resistance;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

L => core/Inductor:

	initial_current= Initial Current;
	inductance= Inductance;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

C => core/Capacitor:

	capacitance= Capacitance;
	initial_voltage= Init. Cap. Voltage;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

C_ELECTRO => core/Capacitor:

	capacitance= Capacitance;
	initial_voltage= Init. Cap. Voltage;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

RHEOSTAT => {

	R=Variable Resistor:
	    inductance = "1e-5";
	;

	SC_in=SCADA Input:
	;

	Connections:
		SC_in:out-R:In,
	;

	Ports:
		R.p_node[pe]=0;
		R.n_node[pe]=1;
	;
}

L_SAT => core/Nonlinear Inductor:

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

RLC => core/Series RLC Branch:

    num_phases = "Single-Phase";
    branch_type = "RLC";
	resistance = Resistance;
	inductance = Inductance;
	capacitance = Capacitance;
	initial_current = Initial Current;
	initial_voltage = Initial Cap Voltage;

	Terminals:
		P1_pos[pe] = 0;
		P1_neg[pe] = 1;
	;
;

R3 => core/Series RLC Branch:

    num_phases = "Three-Phase";
    branch_type = "R";
	resistance = Resistance;

	Terminals:
		P1_pos[pe] = 0;
		P2_pos[pe] = 1;
		P3_pos[pe] = 2;
		P1_neg[pe] = 3;
		P2_neg[pe] = 4;
		P3_neg[pe] = 5;
	;
;

L3 => core/Series RLC Branch:

    num_phases = "Three-Phase";
    branch_type = "L";
	inductance = Inductance;

	Terminals:
		P1_pos[pe] = 0;
		P2_pos[pe] = 1;
		P3_pos[pe] = 2;
		P1_neg[pe] = 3;
		P2_neg[pe] = 4;
		P3_neg[pe] = 5;
	;
;

C3 => core/Series RLC Branch:

    num_phases = "Three-Phase";
    branch_type = "C";
	capacitance = Capacitance;

	Terminals:
		P1_pos[pe] = 0;
		P2_pos[pe] = 1;
		P3_pos[pe] = 2;
		P1_neg[pe] = 3;
		P2_neg[pe] = 4;
		P3_neg[pe] = 5;
	;
;

RL3 => core/Series RLC Branch:

    num_phases = "Three-Phase";
    branch_type = "RL";
    resistance=Resistance;
	inductance = Inductance;

	Terminals:
		P1_pos[pe] = 0;
		P2_pos[pe] = 1;
		P3_pos[pe] = 2;
		P1_neg[pe] = 3;
		P2_neg[pe] = 4;
		P3_neg[pe] = 5;
	;
;


RC3 => core/Series RLC Branch:

    num_phases = "Three-Phase";
    branch_type = "RC";
    resistance=Resistance;
	capacitance = Capacitance;

	Terminals:
		P1_pos[pe] = 0;
		P2_pos[pe] = 1;
		P3_pos[pe] = 2;
		P1_neg[pe] = 3;
		P2_neg[pe] = 4;
		P3_neg[pe] = 5;
	;
;

RLC3 => core/Series RLC Branch:

    num_phases = "Three-Phase";
    branch_type = "RLC";
	resistance = Resistance;
	inductance = Inductance;
	capacitance = Capacitance;

	Terminals:
		P1_pos[pe] = 0;
		P2_pos[pe] = 1;
		P3_pos[pe] = 2;
		P1_neg[pe] = 3;
		P2_neg[pe] = 4;
		P3_neg[pe] = 5;
	;
;

MUT2 => core/Two Coupled Inductors:

	L1= L11 (self);
	I1_0=i1_initial;
	R1=0;
	L2=L22 (self);
	I2_0=i2_initial;
	R2=0;
	k= L12_to_k(L11=L11 (self),L22=L22 (self),L12=L12 (mutual));

	Terminals:
		in_1[pe]=0;
		out_1[pe]=1;
		in_2[pe]=2;
		out_2[pe]=3;
	;
;

MUT3 => core/Three Coupled Inductors:

	L1= L11 (self);
	I1_0=i1_initial;
	R1=0;
	L2=L22 (self);
	I2_0=i2_initial;
	R2=0;
	L3=L33 (self);
	I3_0=i3_initial;
	R3=0;
	k12= L12_to_k(L11=L11 (self),L22=L22 (self),L12=L12 (mutual));
	k13= L12_to_k(L11=L11 (self),L22=L33 (self),L12=L13 (mutual));
	k23= L12_to_k(L11=L22 (self),L22=L33 (self),L12=L23 (mutual));

	Terminals:
		in_1[pe]=0;
		out_1[pe]=1;
		in_2[pe]=2;
		out_2[pe]=3;
		in_3[pe]=4;
		out_3[pe]=5;
	;
;

MUT4 => core/Four Coupled Inductors:

	L1= L11 (self);
	R1=0;
	L2=L22 (self);
	R2=0;
	L3=L33 (self);
	R3=0;
	L4=L44 (self);
	R4=0;
	k12= L12_to_k(L11=L11 (self),L22=L22 (self),L12=L12 (mutual));
	k13= L12_to_k(L11=L11 (self),L22=L33 (self),L12=L13 (mutual));
	k14= L12_to_k(L11=L11 (self),L22=L44 (self),L12=L14 (mutual));
	k23= L12_to_k(L11=L22 (self),L22=L33 (self),L12=L23 (mutual));
	k24= L12_to_k(L11=L22 (self),L22=L44 (self),L12=L24 (mutual));
	k34= L12_to_k(L11=L33 (self),L22=L44 (self),L12=L34 (mutual));

	Terminals:
		in_1[pe]=0;
		out_1[pe]=1;
		in_2[pe]=2;
		out_2[pe]=3;
		in_3[pe]=4;
		out_3[pe]=5;
		in_4[pe]=6;
		out_4[pe]=7;
	;
;

CABLE_AC_3PH => core/Transmission Line:

	model= "PI";
	model_def= "Sequence";
	unit_sys= "metric";
	Length_metric= m_to_km(x=cable_length);
	Frequency=Freq;
	R_sequence_metric= return_cable_sequence(Rd=Rd, R0=Ro);
	L_sequence_metric= return_cable_sequence_L(Xd=Xd, X0=Xo, f=Freq);
	C_sequence_metric= return_cable_sequence(Rd=Cd, R0=Co);

	Terminals:
		a_in[pe]=0;
		b_in[pe]=1;
		c_in[pe]=2;
		gnd[pe]=3;
		a_out[pe]=4;
		b_out[pe]=5;
		c_out[pe]=6;
		gnd[pe]=7;
	;
;

DIODE => core/Diode:

	Terminals:
		A[pe] = 0;
		K[pe] = 1;
	;
;

MOSFET => core/IGBT:

	Terminals:
		D[pe] = 0;
		S[pe] = 1;
	;
;

IGBT => core/IGBT:

	Terminals:
		D[pe] = 0;
		S[pe] = 1;
	;
;

THY => core/Thyristor:

	Terminals:
		A[pe] = 0;
		K[pe] = 1;
	;
;

SSWI => core/Single Pole Single Throw Contactor:

	ctrl_src= "Digital input";

	Terminals:
		a_in[pe] = 0;
		a_out[pe] = 1;
	;
;

SSWI3 => core/Triple Pole Single Throw Contactor:

	ctrl_src= "Digital input";

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		a_out[pe] = 3;
		b_out[pe] = 4;
		c_out[pe] = 5;
	;
;

BDIODE1 => core/Single Phase Diode Rectifier:

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		pos_out[pe] = 2;
		neg_out[pe] = 3;
	;
;

BDIODE3 => core/Three Phase Diode Rectifier:

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		pos_out[pe] = 3;
		neg_out[pe] = 4;
	;
;

BTHY1 => core/Single Phase Thyristor Rectifier:

	ctrl_src= "Digital input";

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		pos_out[pe] = 2;
		neg_out[pe] = 3;
	;
;

BTHY3 => core/Three Phase Thyristor Rectifier:

	ctrl_src= "Digital input";

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		pos_out[pe] = 3;
		neg_out[pe] = 4;
	;
;

VSI3 =>	core/Three Phase Inverter:

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		pos_out[pe] = 3;
		neg_out[pe] = 4;
	;
;

VSI3_1 => core/Three Phase Inverter:

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		pos_out[pe] = 3;
		neg_out[pe] = 4;
	;
;


TF_IDEAL => core/Ideal Transformer:

	n1= Np (primary);
	n2= Ns (secondary);

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		sec_1[pe] = 2;
		sec_2[pe] = 3;
	;
;

TF_IDEAL_1 => core/Ideal Transformer:

	n1= Np (primary);
	n2= return_negative(x=Ns (secondary));

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		sec_1[pe] = 3;
		sec_2[pe] = 2;
	;
;

TF_1F => core/Single Phase Two Winding Transformer:

	n1= Np (primary);
	n2= Ns (secondary);
	R1= Rp (primary);
	L1= Lp (pri. leakage);
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		sec_1[pe] = 2;
		sec_2[pe] = 3;
	;
;

TF_1F_1 => core/Single Phase Two Winding Transformer:

	n1= Np (primary);
	n2= Ns (secondary);
	R1= Rp (primary);
	L1= Lp (pri. leakage);
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		sec_1[pe] = 3;
		sec_2[pe] = 2;
	;
;

TF_1F_3W => core/Single Phase Three Winding Transformer:

	n1= Np (primary);
	n2= Ns (secondary);
	n3= Nt (tertiary);
	R1= Rp (primary);
	L1= Lp (primary);
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	R3= primary_to_secondary(Np=Np (primary), Ns=Nt (tertiary), Rs=Rt (tertiary));
	L3= primary_to_secondary(Np=Np (primary), Ns=Nt (tertiary), Rs=Lt (tertiary leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		sec_1[pe] = 2;
		sec_2[pe] = 3;
		sec_3[pe] = 4;
		sec_4[pe] = 5;
	;
;

TF_1F_4W => core/Single Phase Four Winding Transformer:

	n1= Np_1 (primary 1);
	n2= Np_2 (primary 2);
	n3= Ns_1 (secondary 1);
	n4= Ns_2 (secondary 2);
	R1= Rp_1 (primary 1);
	L1= Lp_1 (pri. 1 leakage);
	R2= primary_to_secondary(Np=Np_1 (primary 1), Ns=Np_2 (primary 2), Rs=Rp_2 (primary 2));
	L2= primary_to_secondary(Np=Np_1 (primary 1), Ns=Np_2 (primary 2), Rs=Lp_2 (pri. 2 leakage));
	R3= primary_to_secondary(Np=Np_1 (primary 1), Ns=Ns_1 (secondary 1), Rs=Rs_1 (secondary 1));
	L3= primary_to_secondary(Np=Np_1 (primary 1), Ns=Ns_1 (secondary 1), Rs=Ls_1 (sec. 1 leakage));
	R4= primary_to_secondary(Np=Np_1 (primary 1), Ns=Ns_2 (secondary 2), Rs=Rs_2 (secondary 2));
	L4= primary_to_secondary(Np=Np_1 (primary 1), Ns=Ns_2 (secondary 2), Rs=Ls_2 (sec. 2 leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		sec_1[pe] = 2;
		sec_2[pe] = 3;
		sec_3[pe] = 4;
		sec_4[pe] = 5;
		sec_5[pe] = 6;
		sec_6[pe] = 7;
	;
;

TF_3YY	=> core/Three Phase Two Winding Transformer:

	V1= Np (primary);
	V2= Ns (secondary);
	R1= Rp (primary);
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L1= Lp (pri. leakage);
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	input= "SI";
	winding_1_connection= "Y";
	winding_2_connection= "Y";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		prm_3[pe] = 2;
		n1[pe] = 3;
		sec_1[pe] = 4;
		sec_2[pe] = 5;
		sec_3[pe] = 6;
		n2[pe] = 7;
	;
;

TF_3YD => core/Three Phase Two Winding Transformer:

	V1= Np (primary);
	V2= Y_to_D(V=Ns (secondary));
	R1= Rp (primary);
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L1= Lp (pri. leakage);
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	input= "SI";
	clock_number="1";
	winding_1_connection= "Y";
	winding_2_connection= "D";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		prm_3[pe] = 2;
		n1[pe] = 3;
		sec_1[pe] = 4;
		sec_2[pe] = 5;
		sec_3[pe] = 6;
	;
;

TF_3DY => core/Three Phase Two Winding Transformer:

	V1= Y_to_D(V=Np (primary));
	V2= Ns (secondary);
	R1= Rp (primary);
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L1= Lp (pri. leakage);
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	input= "SI";
	clock_number="1";
	winding_1_connection= "D";
	winding_2_connection= "Y";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		prm_3[pe] = 2;
		sec_1[pe] = 3;
		sec_2[pe] = 4;
		sec_3[pe] = 5;
		n2[pe] = 6;
	;
;

TF_3DD => core/Three Phase Two Winding Transformer:

	V1= Np (primary);
	V2= Ns (secondary);
	R1= Rp (primary);
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L1= Lp (pri. leakage);
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	input= "SI";
	winding_1_connection= "D";
	winding_2_connection= "D";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		prm_3[pe] = 2;
		sec_1[pe] = 3;
		sec_2[pe] = 4;
		sec_3[pe] = 5;
	;
;

TF_3YDD	=> core/Three Phase Three Winding Transformer:

	V1= Np (primary);
	V2= Y_to_D(V=Ns (secondary));
	V3= Y_to_D(V=Nt (tertiary));
	R1= Rp (primary);
	L1= Lp (pri. leakage);
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	R3= primary_to_secondary(Np=Np (primary), Ns=Nt (tertiary), Rs=Rt (tertiary));
	L3= primary_to_secondary(Np=Np (primary), Ns=Nt (tertiary), Rs=Lt (tertiary leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	winding_1_connection= "Y";
	winding_2_connection= "D";
	clk_num_12="1";
	winding_3_connection= "D";
	clk_num_13="1";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		prm_3[pe] = 2;
		n1[pe] = 3;
		sec_1[pe] = 4;
		sec_2[pe] = 5;
		sec_3[pe] = 6;
		sec_4[pe] = 7;
		sec_5[pe] = 8;
		sec_6[pe] = 9;
	;
;

TF_3YYD	=> core/Three Phase Three Winding Transformer:

	V1= Np (primary);
	V2= Ns (secondary);
	V3= Y_to_D(V=Nt (tertiary));
	R1= Rp (primary);
	L1= Lp (pri. leakage));
	R2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Rs (secondary));
	L2= primary_to_secondary(Np=Np (primary), Ns=Ns (secondary), Rs=Ls (sec. leakage));
	R3= primary_to_secondary(Np=Np (primary), Ns=Nt (tertiary), Rs=Rt (tertiary));
	L3= primary_to_secondary(Np=Np (primary), Ns=Nt (tertiary), Rs=Lt (tertiary leakage));
	Lm= Lm (magnetizing);
	Rm= "10e3";

	winding_1_connection= "Y";
	winding_2_connection= "Y";
	winding_3_connection= "D";
	clk_num_13="1";

	Terminals:
		prm_1[pe] = 0;
		prm_2[pe] = 1;
		prm_3[pe] = 2;
		n1[pe] = 3;
		sec_1[pe] = 4;
		sec_2[pe] = 5;
		sec_3[pe] = 6;
		n2[pe] = 7;
		sec_4[pe] = 8;
		sec_5[pe] = 9;
		sec_6[pe] = 10;
	;
;

INDM_3S => core/Induction Machine with Squirrel Cage:

	Rs= Rs (stator);
	Rr= Rr (rotor);
	Lls= Ls (stator);
	Llr= Lr (rotor);
	Lm= Lm (magnetizing);
	pms= pole_pairs(poles=No. of Poles P);
	Jm= Moment of Inertia;
	load_src= "SCADA / external";

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
	;
;

INDM3_WR => core/Doubly-Fed Induction Machine:

	Rs= Rs (stator);
	Rr= Rr (rotor);
	Lls= Ls (stator);
	Llr= Lr (rotor);
	Lm= Lm (magnetizing);
	m= Ns/Nr Turns Ratio;
	pms= pole_pairs(poles=No. of Poles P);
	Jm= Moment of Inertia;
	load_src= "SCADA / external";

	Terminals:
		a_s[pe] = 0;
		b_s[pe] = 1;
		c_s[pe] = 2;
		a_r[pe] = 4;
		b_r[pe] = 5;
		c_r[pe] = 6;
	;
;

DCM => core/DC Machine with Separate or Parallel Excitation:

	Ra= Ra (armature);
	Rf= Rf (field);
	La= La (armature);
	Lf= Lf (field);
	Laf= return_constant1();
	Jm= Moment of Inertia;
	load_src= "SCADA / external";

	Terminals:
		a1_in[pe] = 0;
		a2_in[pe] = 1;
		f1_in[pe] = 2;
		f2_in[pe] = 3;
	;
;

PMSM3 => core/Permanent Magnet Synchronous Machine with Salient Rotor:

	Rs= Rs (stator resistance);
	Ld= Ld (d-axis ind.);
	Lq= Lq (q-axis ind.);
	pms= pole_pairs(poles=No. of Poles P);
	Psi_pm= psi_pm(Vpk_krpm=Vpk / krpm, poles=No. of Poles P);
	Jm= Moment of Inertia;
	friction_coeff= friction(J= Moment of Inertia, tau= Mech. Time Constant);
	load_src= "SCADA / external";
	Rsnb_stator= "1000";
	theta_ab= "0";

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
	;
;

PMSM3_V	=> core/Permanent Magnet Synchronous Machine with Salient Rotor - Voltage Behind Reactance:

	Rs= Rs (stator resistance);
	Ld= Ld (d-axis ind.);
	Lq= Lq (q-axis ind.);
	pms= pole_pairs(poles=No. of Poles P);
	Psi_pm= psi_pm(Vpk_krpm=Vpk / krpm, poles=No. of Poles P);
	Jm= Moment of Inertia;
	friction_coeff= friction(J= Moment of Inertia, tau= Mech. Time Constant);
	load_src= "SCADA / external";

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
	;
;

SYNM3 => core/Synchronous Machine with Wound Rotor:

	Rs= Rs (stator);
	Lls= Ls (stator);
	Lmd= Ldm (d-axis mag. ind.);
	Lmq= Lqm (q-axis mag. ind.);
	Rf= Rf (field);
	Llfd= Lfl (field leakage ind.);
	Rkd= Rdr (damping cage);
	Rkq= Rqr (damping cage);
	Llkd= Ldrl (damping cage);
	Llkq= Lqrl (damping cage);
	Ns_div_Nfd= Ns/Nf (effective);
	Ns_div_Nkd= Ns/Nf (effective);
	Ns_div_Nkq= Ns/Nf (effective);
	Jm= Moment of Inertia;
	pms= pole_pairs(poles=No. of Poles P);
	load_src= "SCADA / external";

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		r_1[pe] = 4;
		r_2[pe] = 5;
	;
;

SYNM3_I => core/Synchronous Machine with Wound Rotor:

	Rs= Rs (stator);
	Lls= Ls (stator);
	Lmd= Ldm (d-axis mag. ind.);
	Lmq= Lqm (q-axis mag. ind.);
	Rf= Rf (field);
	Llfd= Lfl (field leakage ind.);
	Rkd= Rdr (damping cage);
	Rkq= Rqr (damping cage);
	Llkd= Ldrl (damping cage);
	Llkq= Lqrl (damping cage);
	Ns_div_Nfd= Ns/Nf (effective);
	Ns_div_Nkd= Ns/Nf (effective);
	Ns_div_Nkq= Ns/Nf (effective);
	Jm= Moment of Inertia;
	pms= pole_pairs(poles=No. of Poles P);
	load_src= "SCADA / external";

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		r_1[pe] = 4;
		r_2[pe] = 5;
	;
;

VP2 => core/Voltage Measurement:

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

IP => core/Current Measurement:

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

V_DC => core/Voltage Measurement:

	bw_limit= "True";
	frequency= divide_by_10(x=Cut-off Frequency);

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

V_AC => core/Voltage RMS:

	op_mode= "Fixed frequency";
	frequency= Operating Frequency;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

A_DC => core/Current Measurement:

	bw_limit= "True";
	frequency= divide_by_10(x=Cut-off Frequency);

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

A_AC => core/Current RMS:

	op_mode= "Fixed frequency";
	frequency= Operating Frequency;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

VSEN => core/Voltage Measurement:

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;


ISEN => core/Current Measurement:

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

SOLAR_CELL_PHY => core/Photovoltaic Panel:

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

VDC => core/Voltage Source:

	init_source_nature="Constant";
	init_const_value=Amplitude;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

VDC_CELL => core/Voltage Source:

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

VSIN => core/Voltage Source:

	init_source_nature="Sine";
	init_rms_value=amplitude_to_rms(amplitude=Peak Amplitude);
	init_frequency=Frequency;
	init_phase=Phase Angle;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

VSIN3 => core/Three Phase Voltage Source:

	init_rms_value=line_to_phase_rms(line_rms=V (line-line-rms));
	init_frequency=Frequency;
	init_phase=Init. Angle (phase A);

	Terminals:
		a_node[pe] = 1;
		b_node[pe] = 2;
		c_node[pe] = 3;
		n_node[pe] = 0;
	;
;

IDC => core/Current Source:

	init_source_nature="Constant";
	init_const_value=Amplitude;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

ISIN => core/Current Source:

	init_source_nature="Sine";
	init_rms_value=amplitude_to_rms(amplitude=Peak Amplitude);
	init_frequency=Frequency;
	init_phase=Phase Angle;

	Terminals:
		p_node[pe] = 0;
		n_node[pe] = 1;
	;
;

SM_3L_FLYCAP_LEG => {

	converter=Three Level Flying Capacitor Inverter Leg:
		S_1= int2string(int_value = S_1);
		S_2= int2string(int_value = S_2);
		S_3= int2string(int_value = S_3);
		S_4= int2string(int_value = S_4);
	;

	C1=Capacitor:
		capacitance= Cp1;
		initial_voltage= Vcp1;
	;

	Connections:
		converter:C1-C1:p_node,
		converter:C2-C1:n_node.
	;

	Ports:
		converter.DC+[pe]=0;
		converter.DC-[pe]=1;
		converter.A[pe]=2;
	;
}


SM_7L_FLYCAP_LEG => {

	converter=Seven Level Flying Capacitor Inverter Leg:
	;

	C1=Capacitor:
	;

	C2=Capacitor:
	;

	C3=Capacitor:
	;

	C4=Capacitor:
	;

	C5=Capacitor:
	;

	Connections:
		converter:C1-C1:p_node,
		converter:C2-C2:p_node,
		converter:C3-C3:p_node,
		converter:C4-C4:p_node,
		converter:C5-C5:p_node,
		converter:C6-C5:n_node,
		converter:C7-C4:n_node,
		converter:C8-C3:n_node,
		converter:C9-C2:n_node,
		converter:C10-C1:n_node.
	;

	Ports:
		converter.DC+[pe]=0;
		converter.DC-[pe]=1;
		converter.A[pe]=2;
	;
}

CORE_COUPLING_2PH => core/Single Phase Core Coupling:

    snb_type_i=snb_type_i_int_to_str(snb_type_int=snubber_type_i);
    R1=R1_i;
    C1=C1_i;
    fixed_snb_i=fixed_snb_int_to_str(fixed_snb_int=fixed_snubber_i);

    snb_type_u=snb_type_u_int_to_str(snb_type_int=snubber_type_v);
    R2=R2_v;
    L1=L1_v;
    fixed_snb_u=fixed_snb_int_to_str(fixed_snb_int=fixed_snubber_v);

	Terminals:
		a_in[pe] = 0;
		a_out[pe] = 2;
		b_in[pe] = 1;
		b_out[pe] = 3;
	;
;

CORE_COUPLING_3PH => core/Three Phase Core Coupling:

    snb_type_i=snb_type_i_int_to_str(snb_type_int=snubber_type_i);
    R1=R1_i;
    C1=C1_i;
    fixed_snb_i=fixed_snb_int_to_str(fixed_snb_int=fixed_snubber_i);

    snb_type_u=snb_type_u_int_to_str(snb_type_int=snubber_type_v);
    R2=R2_v;
    L1=L1_v;
    fixed_snb_u=fixed_snb_int_to_str(fixed_snb_int=fixed_snubber_v);

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		a_out[pe] = 3;
		b_out[pe] = 4;
		c_out[pe] = 5;
	;
;

CORE_COUPLING_4PH => core/Four Phase Core Coupling:

    snb_type_i=snb_type_i_int_to_str(snb_type_int=snubber_type_i);
    R1=R1_i;
    C1=C1_i;
    fixed_snb_i=fixed_snb_int_to_str(fixed_snb_int=fixed_snubber_i);

    snb_type_u=snb_type_u_int_to_str(snb_type_int=snubber_type_v);
    R2=R2_v;
    L1=L1_v;
    fixed_snb_u=fixed_snb_int_to_str(fixed_snb_int=fixed_snubber_v);

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		d_in[pe] = 3;
		a_out[pe] = 4;
		b_out[pe] = 5;
		c_out[pe] = 6;
		d_out[pe] = 7;
	;
;

CORE_COUPLING_5PH => core/Five Phase Core Coupling:

    snb_type_i=snb_type_i_int_to_str(snb_type_int=snubber_type_i);
    R1=R1_i;
    C1=C1_i;
    fixed_snb_i=fixed_snb_int_to_str(fixed_snb_int=fixed_snubber_i);

    snb_type_u=snb_type_u_int_to_str(snb_type_int=snubber_type_v);
    R2=R2_v;
    L1=L1_v;
    fixed_snb_u=fixed_snb_int_to_str(fixed_snb_int=fixed_snubber_v);

	Terminals:
		a_in[pe] = 0;
		b_in[pe] = 1;
		c_in[pe] = 2;
		d_in[pe] = 3;
		e_in[pe] = 4;
		a_out[pe] = 5;
		b_out[pe] = 6;
		c_out[pe] = 7;
		d_out[pe] = 8;
		e_out[pe] = 9;
	;
;
